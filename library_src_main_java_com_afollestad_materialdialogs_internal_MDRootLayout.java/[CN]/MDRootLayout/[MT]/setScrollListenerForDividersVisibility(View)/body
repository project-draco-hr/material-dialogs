{
  if (view == null)   return;
  if (view instanceof ScrollView) {
    final ScrollView sv=(ScrollView)view;
    if (mOnScrollChangedListener == null) {
      mOnScrollChangedListener=new ViewTreeObserver.OnScrollChangedListener(){
        @Override public void onScrollChanged(){
          boolean canScroll=canScrollViewScroll(sv);
          invalidateDividersVisibility(canScroll,sv);
        }
      }
;
      sv.getViewTreeObserver().addOnScrollChangedListener(mOnScrollChangedListener);
    }
  }
 else   if (view instanceof AdapterView) {
    final AdapterView sv=(AdapterView)view;
    if (mOnScrollChangedListener == null) {
      mOnScrollChangedListener=new ViewTreeObserver.OnScrollChangedListener(){
        @Override public void onScrollChanged(){
          boolean canScroll=canAdapterViewScroll(sv);
          invalidateDividersVisibility(canScroll,sv);
        }
      }
;
      sv.getViewTreeObserver().addOnScrollChangedListener(mOnScrollChangedListener);
    }
  }
 else   if (view instanceof WebView) {
    boolean canScroll=canWebViewScroll((WebView)view);
    mDrawTopDivider=mDrawBottomDivider=canScroll;
  }
 else   if (view instanceof RecyclerView) {
    final RecyclerView rv=(RecyclerView)view;
    if (mOnScrollChangedListener == null) {
      mOnScrollChangedListener=new ViewTreeObserver.OnScrollChangedListener(){
        @Override public void onScrollChanged(){
          boolean canScroll=canRecyclerViewScroll(rv);
          invalidateDividersVisibility(canScroll,rv);
        }
      }
;
      rv.getViewTreeObserver().addOnScrollChangedListener(mOnScrollChangedListener);
    }
  }
 else   if (view instanceof ViewGroup) {
    View bottomView=getBottomView((ViewGroup)view);
    setScrollListenerForDividersVisibility(bottomView);
    View topView=getTopView((ViewGroup)view);
    setScrollListenerForDividersVisibility(topView);
  }
}
