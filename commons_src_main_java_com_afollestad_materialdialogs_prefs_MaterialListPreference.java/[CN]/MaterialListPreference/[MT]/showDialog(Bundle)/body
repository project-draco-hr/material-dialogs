{
  if (getEntries() == null || getEntryValues() == null) {
    throw new IllegalStateException("ListPreference requires an entries array and an entryValues array.");
  }
  int preselect=findIndexOfValue(getValue());
  MaterialDialog.Builder builder=new MaterialDialog.Builder(context).title(getDialogTitle()).content(getDialogMessage()).icon(getDialogIcon()).dismissListener(this).onAny(new MaterialDialog.SingleButtonCallback(){
    @Override public void onClick(    @NonNull MaterialDialog dialog,    @NonNull DialogAction which){
switch (which) {
default :
        MaterialListPreference.this.onClick(dialog,DialogInterface.BUTTON_POSITIVE);
      break;
case NEUTRAL:
    MaterialListPreference.this.onClick(dialog,DialogInterface.BUTTON_NEUTRAL);
  break;
case NEGATIVE:
MaterialListPreference.this.onClick(dialog,DialogInterface.BUTTON_NEGATIVE);
break;
}
}
}
).onAny(new MaterialDialog.SingleButtonCallback(){
@Override public void onClick(@NonNull MaterialDialog dialog,@NonNull DialogAction which){
switch (which) {
case POSITIVE:
MaterialListPreference.this.onClick(dialog,DialogInterface.BUTTON_POSITIVE);
break;
case NEGATIVE:
MaterialListPreference.this.onClick(dialog,DialogInterface.BUTTON_NEGATIVE);
break;
case NEUTRAL:
MaterialListPreference.this.onClick(dialog,DialogInterface.BUTTON_NEUTRAL);
break;
}
}
}
).negativeText(getNegativeButtonText()).items(getEntries()).autoDismiss(true).itemsCallbackSingleChoice(preselect,new MaterialDialog.ListCallbackSingleChoice(){
@Override public boolean onSelection(MaterialDialog dialog,View itemView,int which,CharSequence text){
onClick(null,DialogInterface.BUTTON_POSITIVE);
if (which >= 0 && getEntryValues() != null) {
try {
Field clickedIndex=ListPreference.class.getDeclaredField("mClickedDialogEntryIndex");
clickedIndex.setAccessible(true);
clickedIndex.set(MaterialListPreference.this,which);
}
 catch (Exception e) {
e.printStackTrace();
}
}
return true;
}
}
);
final View contentView=onCreateDialogView();
if (contentView != null) {
onBindDialogView(contentView);
builder.customView(contentView,false);
}
 else {
builder.content(getDialogMessage());
}
PrefUtil.registerOnActivityDestroyListener(this,this);
mDialog=builder.build();
if (state != null) mDialog.onRestoreInstanceState(state);
mDialog.show();
}
