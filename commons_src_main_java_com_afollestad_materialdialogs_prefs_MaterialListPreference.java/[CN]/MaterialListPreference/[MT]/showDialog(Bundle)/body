{
  if (getEntries() == null || getEntryValues() == null) {
    throw new IllegalStateException("ListPreference requires an entries array and an entryValues array.");
  }
  int preselect=findIndexOfValue(getValue());
  MaterialDialog.Builder builder=new MaterialDialog.Builder(context).title(getDialogTitle()).content(getDialogMessage()).icon(getDialogIcon()).dismissListener(this).callback(new MaterialDialog.ButtonCallback(){
    @Override public void onNeutral(    MaterialDialog dialog){
      onClick(dialog,DialogInterface.BUTTON_NEUTRAL);
    }
    @Override public void onNegative(    MaterialDialog dialog){
      onClick(dialog,DialogInterface.BUTTON_NEGATIVE);
    }
    @Override public void onPositive(    MaterialDialog dialog){
      onClick(dialog,DialogInterface.BUTTON_POSITIVE);
    }
  }
).negativeText(getNegativeButtonText()).items(getEntries()).autoDismiss(true).itemsCallbackSingleChoice(preselect,new MaterialDialog.ListCallbackSingleChoice(){
    @Override public boolean onSelection(    MaterialDialog dialog,    View itemView,    int which,    CharSequence text){
      onClick(null,DialogInterface.BUTTON_POSITIVE);
      if (which >= 0 && getEntryValues() != null) {
        try {
          Field clickedIndex=ListPreference.class.getDeclaredField("mClickedDialogEntryIndex");
          clickedIndex.setAccessible(true);
          clickedIndex.set(MaterialListPreference.this,which);
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
      }
      return true;
    }
  }
);
  final View contentView=onCreateDialogView();
  if (contentView != null) {
    onBindDialogView(contentView);
    builder.customView(contentView,false);
  }
 else {
    builder.content(getDialogMessage());
  }
  try {
    PreferenceManager pm=getPreferenceManager();
    Method method=pm.getClass().getDeclaredMethod("registerOnActivityDestroyListener",PreferenceManager.OnActivityDestroyListener.class);
    method.setAccessible(true);
    method.invoke(pm,this);
  }
 catch (  Exception ignored) {
  }
  mDialog=builder.build();
  if (state != null)   mDialog.onRestoreInstanceState(state);
  mDialog.show();
}
