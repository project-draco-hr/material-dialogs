{
  final MaterialDialog.Builder builder=dialog.mBuilder;
  if (builder.indeterminateProgress || builder.progress > -2) {
    dialog.mProgress=(ProgressBar)dialog.view.findViewById(android.R.id.progress);
    if (dialog.mProgress == null)     return;
    if (builder.indeterminateProgress && Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH && Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
      dialog.mProgress.setIndeterminateDrawable(new CircularProgressDrawable(builder.widgetColor,builder.context.getResources().getDimension(R.dimen.circular_progress_border)));
    }
 else     if (!builder.indeterminateProgress && Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
      dialog.mProgress.setIndeterminateDrawable(new CircularProgressDrawable(builder.widgetColor,builder.context.getResources().getDimension(R.dimen.circular_progress_border)));
      MDTintHelper.setTint(dialog.mProgress,builder.widgetColor,true);
    }
 else {
      MDTintHelper.setTint(dialog.mProgress,builder.widgetColor);
    }
    if (!builder.indeterminateProgress) {
      dialog.mProgress.setProgress(0);
      dialog.mProgress.setMax(builder.progressMax);
      dialog.mProgressLabel=(TextView)dialog.view.findViewById(R.id.label);
      dialog.mProgressLabel.setTextColor(builder.contentColor);
      dialog.setTypeface(dialog.mProgressLabel,builder.mediumFont);
      dialog.mProgressMinMax=(TextView)dialog.view.findViewById(R.id.minMax);
      dialog.mProgressMinMax.setTextColor(builder.contentColor);
      dialog.setTypeface(dialog.mProgressMinMax,builder.regularFont);
      if (builder.showMinMax) {
        dialog.mProgressMinMax.setVisibility(View.VISIBLE);
        dialog.mProgressMinMax.setText("0/" + builder.progressMax);
        ViewGroup.MarginLayoutParams lp=(ViewGroup.MarginLayoutParams)dialog.mProgress.getLayoutParams();
        lp.leftMargin=0;
        lp.rightMargin=0;
      }
 else {
        dialog.mProgressMinMax.setVisibility(View.GONE);
      }
      dialog.mProgressLabel.setText("0%");
    }
  }
}
