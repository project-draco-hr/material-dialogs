{
  if (dialog == null)   dialog=(MaterialDialog)getDialog();
  if (mGrid.getVisibility() == View.VISIBLE) {
    dialog.setTitle(getBuilder().mCustomBtn);
    dialog.setActionButton(DialogAction.NEUTRAL,getBuilder().mPresetsBtn);
    dialog.setActionButton(DialogAction.NEGATIVE,getBuilder().mCancelBtn);
    mGrid.setVisibility(View.GONE);
    mColorChooserCustomFrame.setVisibility(View.VISIBLE);
    mCustomColorTextWatcher=new TextWatcher(){
      @Override public void beforeTextChanged(      CharSequence s,      int start,      int count,      int after){
      }
      @Override public void onTextChanged(      CharSequence s,      int start,      int before,      int count){
        try {
          mSelectedCustomColor=Color.parseColor("#" + s.toString());
        }
 catch (        IllegalArgumentException e) {
          mSelectedCustomColor=Color.BLACK;
        }
        mCustomColorIndicator.setBackgroundColor(mSelectedCustomColor);
        if (mCustomSeekA.getVisibility() == View.VISIBLE) {
          int alpha=Color.alpha(mSelectedCustomColor);
          mCustomSeekA.setProgress(alpha);
          mCustomSeekAValue.setText(String.format("%d",alpha));
        }
        if (mCustomSeekA.getVisibility() == View.VISIBLE) {
          int alpha=Color.alpha(mSelectedCustomColor);
          mCustomSeekA.setProgress(alpha);
        }
        int red=Color.red(mSelectedCustomColor);
        mCustomSeekR.setProgress(red);
        int green=Color.green(mSelectedCustomColor);
        mCustomSeekG.setProgress(green);
        int blue=Color.blue(mSelectedCustomColor);
        mCustomSeekB.setProgress(blue);
        isInSub(false);
        topIndex(-1);
        subIndex(-1);
        invalidateDynamicButtonColors();
      }
      @Override public void afterTextChanged(      Editable s){
      }
    }
;
    mCustomColorHex.addTextChangedListener(mCustomColorTextWatcher);
    mCustomColorRgbListener=new SeekBar.OnSeekBarChangeListener(){
      @Override public void onProgressChanged(      SeekBar seekBar,      int progress,      boolean fromUser){
        if (fromUser) {
          if (getBuilder().mAllowUserCustomAlpha) {
            int color=Color.argb(mCustomSeekA.getProgress(),mCustomSeekR.getProgress(),mCustomSeekG.getProgress(),mCustomSeekB.getProgress());
            mCustomColorHex.setText(String.format("%08X",color));
          }
 else {
            int color=Color.rgb(mCustomSeekR.getProgress(),mCustomSeekG.getProgress(),mCustomSeekB.getProgress());
            mCustomColorHex.setText(String.format("%06X",0xFFFFFF & color));
          }
        }
        mCustomSeekAValue.setText(String.format("%d",mCustomSeekA.getProgress()));
        mCustomSeekRValue.setText(String.format("%d",mCustomSeekR.getProgress()));
        mCustomSeekGValue.setText(String.format("%d",mCustomSeekG.getProgress()));
        mCustomSeekBValue.setText(String.format("%d",mCustomSeekB.getProgress()));
      }
      @Override public void onStartTrackingTouch(      SeekBar seekBar){
      }
      @Override public void onStopTrackingTouch(      SeekBar seekBar){
      }
    }
;
    mCustomSeekR.setOnSeekBarChangeListener(mCustomColorRgbListener);
    mCustomSeekG.setOnSeekBarChangeListener(mCustomColorRgbListener);
    mCustomSeekB.setOnSeekBarChangeListener(mCustomColorRgbListener);
    if (mCustomSeekA.getVisibility() == View.VISIBLE) {
      mCustomSeekA.setOnSeekBarChangeListener(mCustomColorRgbListener);
      mCustomColorHex.setText(String.format("%08X",mSelectedCustomColor));
    }
 else {
      mCustomColorHex.setText(String.format("%06X",0xFFFFFF & mSelectedCustomColor));
    }
  }
 else {
    dialog.setTitle(getBuilder().mTitle);
    dialog.setActionButton(DialogAction.NEUTRAL,getBuilder().mCustomBtn);
    if (isInSub())     dialog.setActionButton(DialogAction.NEGATIVE,getBuilder().mBackBtn);
 else     dialog.setActionButton(DialogAction.NEGATIVE,getBuilder().mCancelBtn);
    mGrid.setVisibility(View.VISIBLE);
    mColorChooserCustomFrame.setVisibility(View.GONE);
    mCustomColorHex.removeTextChangedListener(mCustomColorTextWatcher);
    mCustomColorTextWatcher=null;
    mCustomSeekR.setOnSeekBarChangeListener(null);
    mCustomSeekG.setOnSeekBarChangeListener(null);
    mCustomSeekB.setOnSeekBarChangeListener(null);
    mCustomColorRgbListener=null;
  }
}
