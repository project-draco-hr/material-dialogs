{
  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && ActivityCompat.checkSelfPermission(getActivity(),Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
    return new MaterialDialog.Builder(getActivity()).title(R.string.md_error_label).content(R.string.md_storage_perm_error).positiveText(android.R.string.ok).build();
  }
  if (getArguments() == null || !getArguments().containsKey("builder"))   throw new IllegalStateException("You must create a FolderChooserDialog using the Builder.");
  if (!getArguments().containsKey("current_path"))   getArguments().putString("current_path",getBuilder().mInitialPath);
  parentFolder=new File(getArguments().getString("current_path"));
  parentContents=listFiles();
  MaterialDialog.Builder builder=new MaterialDialog.Builder(getActivity()).title(parentFolder.getAbsolutePath()).items(getContentsArray()).itemsCallback(this).onPositive(new MaterialDialog.SingleButtonCallback(){
    @Override public void onClick(    @NonNull MaterialDialog dialog,    @NonNull DialogAction which){
      dialog.dismiss();
      mCallback.onFolderSelection(FolderChooserDialog.this,parentFolder);
    }
  }
).onNegative(new MaterialDialog.SingleButtonCallback(){
    @Override public void onClick(    @NonNull MaterialDialog dialog,    @NonNull DialogAction which){
      dialog.dismiss();
    }
  }
).autoDismiss(false).positiveText(getBuilder().mChooseButton).negativeText(getBuilder().mCancelButton);
  if (getBuilder().mAllowNewFolder) {
    builder.neutralText(getBuilder().mNewFolderButton);
    builder.onNeutral(new MaterialDialog.SingleButtonCallback(){
      @Override public void onClick(      @NonNull MaterialDialog dialog,      @NonNull DialogAction which){
        createNewFolder();
      }
    }
);
  }
  return builder.build();
}
