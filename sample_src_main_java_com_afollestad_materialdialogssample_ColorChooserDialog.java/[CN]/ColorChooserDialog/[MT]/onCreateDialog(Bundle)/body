{
  MaterialDialog dialog=new MaterialDialog.Builder(getActivity()).title(R.string.color_chooser).autoDismiss(false).customView(R.layout.dialog_color_chooser,false).build();
  final TypedArray ta=getActivity().getResources().obtainTypedArray(R.array.material_colors_500);
  mColors=new int[ta.length()];
  for (int i=0; i < ta.length(); i++)   mColors[i]=ta.getColor(i,0);
  ta.recycle();
  final GridLayout list=(GridLayout)dialog.getCustomView().findViewById(R.id.grid);
  final int preselect=getArguments().getInt("preselect",-1);
  for (int i=0; i < list.getChildCount(); i++) {
    FrameLayout child=(FrameLayout)list.getChildAt(i);
    child.setTag(i);
    child.setOnClickListener(this);
    child.getChildAt(0).setVisibility(preselect == i ? View.VISIBLE : View.GONE);
    Drawable selector=createSelector(mColors[i]);
    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
      int[][] states=new int[][]{new int[]{-android.R.attr.state_pressed},new int[]{android.R.attr.state_pressed}};
      int[] colors=new int[]{shiftColor(mColors[i]),mColors[i]};
      ColorStateList rippleColors=new ColorStateList(states,colors);
      setBackgroundCompat(child,new RippleDrawable(rippleColors,selector,null));
    }
 else {
      setBackgroundCompat(child,selector);
    }
  }
  return dialog;
}
