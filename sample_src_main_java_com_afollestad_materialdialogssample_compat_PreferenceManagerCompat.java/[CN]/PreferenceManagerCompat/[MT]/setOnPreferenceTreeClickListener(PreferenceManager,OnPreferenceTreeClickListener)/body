{
  try {
    Field onPreferenceTreeClickListener=PreferenceManager.class.getDeclaredField("mOnPreferenceTreeClickListener");
    onPreferenceTreeClickListener.setAccessible(true);
    if (listener != null) {
      Object proxy=Proxy.newProxyInstance(onPreferenceTreeClickListener.getType().getClassLoader(),new Class[]{onPreferenceTreeClickListener.getType()},new InvocationHandler(){
        public Object invoke(        Object proxy,        Method method,        Object[] args){
          if (method.getName().equals("onPreferenceTreeClick")) {
            return Boolean.valueOf(listener.onPreferenceTreeClick((PreferenceScreen)args[0],(Preference)args[1]));
          }
 else {
            return null;
          }
        }
      }
);
      onPreferenceTreeClickListener.set(manager,proxy);
    }
 else {
      onPreferenceTreeClickListener.set(manager,null);
    }
  }
 catch (  Exception e) {
    Log.w(TAG,"Couldn't set PreferenceManager.mOnPreferenceTreeClickListener by reflection",e);
  }
}
