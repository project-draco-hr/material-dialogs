{
  if (getEntries() == null || getEntryValues() == null) {
    throw new IllegalStateException("ListPreference requires an entries array and an entryValues array.");
  }
  int preselect=findIndexOfValue(getValue());
  MaterialDialog.Builder builder=new MaterialDialog.Builder(context).title(getDialogTitle()).content(getDialogMessage()).icon(getDialogIcon()).negativeText(getNegativeButtonText()).items(getEntries()).itemsCallbackSingleChoice(preselect,new MaterialDialog.ListCallback(){
    @Override public void onSelection(    MaterialDialog dialog,    View itemView,    int which,    CharSequence text){
      onClick(null,DialogInterface.BUTTON_POSITIVE);
      dialog.dismiss();
      if (which >= 0 && getEntryValues() != null) {
        String value=getEntryValues()[which].toString();
        if (callChangeListener(value) && isPersistent())         setValue(value);
      }
    }
  }
);
  final View contentView=onCreateDialogView();
  if (contentView != null) {
    onBindDialogView(contentView);
    builder.customView(contentView,false);
  }
 else {
    builder.content(getDialogMessage());
  }
  mDialog=builder.show();
}
