{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.activity_main);
  findViewById(R.id.basicNoTitle).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showBasicNoTitle();
    }
  }
);
  findViewById(R.id.basic).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showBasic();
    }
  }
);
  findViewById(R.id.basicLongContent).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showBasicLongContent();
    }
  }
);
  findViewById(R.id.basicIcon).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showBasicIcon();
    }
  }
);
  findViewById(R.id.stacked).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showStacked();
    }
  }
);
  findViewById(R.id.neutral).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showNeutral();
    }
  }
);
  findViewById(R.id.callbacks).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showCallbacks();
    }
  }
);
  findViewById(R.id.list).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showList();
    }
  }
);
  findViewById(R.id.listNoTitle).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showListNoTitle();
    }
  }
);
  findViewById(R.id.longList).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showLongList();
    }
  }
);
  findViewById(R.id.singleChoice).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showSingleChoice();
    }
  }
);
  findViewById(R.id.multiChoice).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showMultiChoice();
    }
  }
);
  findViewById(R.id.multiChoiceLimited).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showMultiChoiceLimited();
    }
  }
);
  findViewById(R.id.simpleList).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showSimpleList();
    }
  }
);
  findViewById(R.id.customListItems).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showCustomList();
    }
  }
);
  findViewById(R.id.customView).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showCustomView();
    }
  }
);
  findViewById(R.id.customView_webView).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showCustomWebView();
    }
  }
);
  findViewById(R.id.customView_colorChooser).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showCustomColorChooser();
    }
  }
);
  findViewById(R.id.themed).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showThemed();
    }
  }
);
  findViewById(R.id.showCancelDismiss).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showShowCancelDismissCallbacks();
    }
  }
);
  findViewById(R.id.folder_chooser).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      new FolderSelectorDialog().show(MainActivity.this);
    }
  }
);
  findViewById(R.id.input).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showInputDialog();
    }
  }
);
  findViewById(R.id.input_custominvalidation).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showInputDialogCustomInvalidation();
    }
  }
);
  findViewById(R.id.progress1).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showDeterminateProgressDialog();
    }
  }
);
  findViewById(R.id.progress2).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showIndeterminateProgressDialog(false);
    }
  }
);
  findViewById(R.id.progress3).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      showIndeterminateProgressDialog(true);
    }
  }
);
  findViewById(R.id.preference_dialogs).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (Build.VERSION.SDK_INT > Build.VERSION_CODES.GINGERBREAD_MR1)       startActivity(new Intent(getApplicationContext(),PreferenceActivity.class));
 else       startActivity(new Intent(getApplicationContext(),PreferenceActivityCompat.class));
    }
  }
);
}
