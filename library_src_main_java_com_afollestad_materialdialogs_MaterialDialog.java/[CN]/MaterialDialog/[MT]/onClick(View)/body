{
  String tag=(String)v.getTag();
switch (tag) {
case POSITIVE:
{
      if (callback != null)       callback.onPositive(this);
      if (listCallbackSingle != null)       sendSingleChoiceCallback(v);
      if (listCallbackMulti != null)       sendMultichoiceCallback();
      if (autoDismiss)       dismiss();
      break;
    }
case NEGATIVE:
{
    if (callback != null)     callback.onNegative(this);
    if (autoDismiss)     dismiss();
    break;
  }
case NEUTRAL:
{
  if (callback != null)   callback.onNeutral(this);
  if (autoDismiss)   dismiss();
  break;
}
default :
{
String[] split=tag.split(":");
int index=Integer.parseInt(split[0]);
if (listCallback != null) {
  if (autoDismiss) {
    dismiss();
    listCallback.onSelection(this,v,index,split[1]);
  }
}
 else if (listCallbackSingle != null) {
  RadioButton cb=(RadioButton)((LinearLayout)v).getChildAt(0);
  if (!cb.isChecked())   cb.setChecked(true);
  invalidateSingleChoice(index);
  if (autoDismiss && positiveText == null) {
    dismiss();
    sendSingleChoiceCallback(v);
  }
}
 else if (listCallbackMulti != null) {
  CheckBox cb=(CheckBox)((LinearLayout)v).getChildAt(0);
  cb.setChecked(!cb.isChecked());
}
 else if (autoDismiss) dismiss();
break;
}
}
}
