{
  invalidateActions();
  if (numberOfActionButtons() <= 1) {
    return;
  }
 else   if (mBuilder.forceStacking) {
    isStacked=true;
  }
 else {
    isStacked=false;
    int buttonsWidth=0;
    positiveButton.measure(View.MeasureSpec.UNSPECIFIED,View.MeasureSpec.UNSPECIFIED);
    neutralButton.measure(View.MeasureSpec.UNSPECIFIED,View.MeasureSpec.UNSPECIFIED);
    negativeButton.measure(View.MeasureSpec.UNSPECIFIED,View.MeasureSpec.UNSPECIFIED);
    if (mBuilder.positiveText != null && positiveButton.getVisibility() == View.VISIBLE) {
      buttonsWidth+=positiveButton.getMeasuredWidth();
    }
    if (mBuilder.neutralText != null && neutralButton.getVisibility() == View.VISIBLE) {
      buttonsWidth+=neutralButton.getMeasuredWidth();
    }
    if (mBuilder.negativeText != null && negativeButton.getVisibility() == View.VISIBLE) {
      buttonsWidth+=negativeButton.getMeasuredWidth();
    }
    final int buttonFrameWidth=view.findViewById(R.id.buttonDefaultFrame).getMeasuredWidth();
    isStacked=buttonsWidth > buttonFrameWidth;
  }
  if (isStacked) {
    invalidateActions();
    positiveButton.setVisibility(mBuilder.positiveText != null ? View.VISIBLE : View.GONE);
    neutralButton.setVisibility(mBuilder.neutralText != null ? View.VISIBLE : View.GONE);
    negativeButton.setVisibility(mBuilder.negativeText != null ? View.VISIBLE : View.GONE);
  }
}
