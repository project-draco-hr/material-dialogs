{
  if (positiveText == null) {
    view.findViewById(R.id.buttonDefaultFrame).setVisibility(View.GONE);
    view.findViewById(R.id.buttonStackedFrame).setVisibility(View.GONE);
    invalidateList();
    return false;
  }
  if (isStacked) {
    view.findViewById(R.id.buttonDefaultFrame).setVisibility(View.GONE);
    view.findViewById(R.id.buttonStackedFrame).setVisibility(View.VISIBLE);
  }
 else {
    view.findViewById(R.id.buttonDefaultFrame).setVisibility(View.VISIBLE);
    view.findViewById(R.id.buttonStackedFrame).setVisibility(View.GONE);
  }
  positiveButton=(TextView)view.findViewById(isStacked ? R.id.buttonStackedPositive : R.id.buttonDefaultPositive);
  if (this.positiveText != null) {
    setTypeface(positiveButton,mediumFont);
    positiveButton.setText(this.positiveText);
    positiveButton.setTextColor(getActionTextStateList(this.positiveColor));
    setBackgroundCompat(positiveButton,DialogUtils.resolveDrawable(getContext(),R.attr.md_selector));
    positiveButton.setTag(POSITIVE);
    positiveButton.setOnClickListener(this);
  }
 else {
    positiveButton.setVisibility(View.GONE);
  }
  neutralButton=(TextView)view.findViewById(isStacked ? R.id.buttonStackedNeutral : R.id.buttonDefaultNeutral);
  if (this.neutralText != null) {
    setTypeface(neutralButton,mediumFont);
    neutralButton.setVisibility(View.VISIBLE);
    neutralButton.setTextColor(getActionTextStateList(this.neutralColor));
    setBackgroundCompat(neutralButton,DialogUtils.resolveDrawable(getContext(),R.attr.md_selector));
    neutralButton.setText(this.neutralText);
    neutralButton.setTag(NEUTRAL);
    neutralButton.setOnClickListener(this);
  }
 else {
    neutralButton.setVisibility(View.GONE);
  }
  negativeButton=(TextView)view.findViewById(isStacked ? R.id.buttonStackedNegative : R.id.buttonDefaultNegative);
  if (this.negativeText != null) {
    setTypeface(negativeButton,mediumFont);
    negativeButton.setVisibility(View.VISIBLE);
    negativeButton.setTextColor(getActionTextStateList(this.negativeColor));
    setBackgroundCompat(negativeButton,DialogUtils.resolveDrawable(getContext(),R.attr.md_selector));
    negativeButton.setText(this.negativeText);
    negativeButton.setTag(NEGATIVE);
    negativeButton.setOnClickListener(this);
  }
 else {
    negativeButton.setVisibility(View.GONE);
  }
  invalidateList();
  return true;
}
