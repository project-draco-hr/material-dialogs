{
  super(new ContextThemeWrapper(builder.context,builder.theme == Theme.LIGHT ? R.style.MD_Light : R.style.MD_Dark));
  this.mContext=builder.context;
  this.view=LayoutInflater.from(builder.context).inflate(R.layout.md_dialog,null);
  this.customView=builder.customView;
  this.callback=builder.callback;
  this.listCallback=builder.listCallback;
  this.listCallbackSingle=builder.listCallbackSingle;
  this.listCallbackMulti=builder.listCallbackMulti;
  this.positiveText=builder.positiveText;
  this.neutralText=builder.neutralText;
  this.negativeText=builder.negativeText;
  this.positiveColor=builder.positiveColor;
  this.negativeColor=builder.negativeColor;
  this.neutralColor=builder.neutralColor;
  this.items=builder.items;
  this.setCancelable(builder.cancelable);
  final Typeface regularFont=Typeface.createFromAsset(getContext().getResources().getAssets(),"Roboto-Regular.ttf");
  this.mediumFont=Typeface.createFromAsset(getContext().getResources().getAssets(),"Roboto-Medium.ttf");
  this.selectedIndex=builder.selectedIndex;
  this.selectedIndices=builder.selectedIndicies;
  this.mItemProcessor=builder.itemProcessor;
  this.hideActions=builder.hideActions;
  this.autoDismiss=builder.autoDismiss;
  TextView title=(TextView)view.findViewById(R.id.title);
  final TextView content=(TextView)view.findViewById(R.id.content);
  content.setText(builder.content);
  content.setMovementMethod(new LinkMovementMethod());
  content.setVisibility(View.VISIBLE);
  content.setTypeface(regularFont);
  content.setTextColor(DialogUtils.resolveColor(getContext(),android.R.attr.textColorSecondary));
  content.setLineSpacing(0f,builder.contentLineSpacingMultiplier);
  if (this.positiveColor == 0) {
    content.setLinkTextColor(DialogUtils.resolveColor(getContext(),android.R.attr.textColorPrimary));
  }
 else {
    content.setLinkTextColor(this.positiveColor);
  }
  if (builder.contentAlignment == Alignment.CENTER) {
    content.setGravity(Gravity.CENTER_HORIZONTAL);
  }
 else   if (builder.contentAlignment == Alignment.RIGHT) {
    content.setGravity(Gravity.RIGHT);
  }
  if (customView != null) {
    title=(TextView)view.findViewById(R.id.titleCustomView);
    invalidateCustomViewAssociations();
    ((LinearLayout)view.findViewById(R.id.customViewFrame)).addView(customView);
  }
 else {
    invalidateCustomViewAssociations();
  }
  if ((items != null && items.length > 0) || (colorChooser != null && colorChooser.length > 0))   title=(TextView)view.findViewById(R.id.titleCustomView);
  if (builder.title == null || builder.title.toString().trim().isEmpty()) {
    title.setVisibility(View.GONE);
  }
 else {
    title.setText(builder.title);
    title.setTypeface(mediumFont);
    if (builder.titleColor != -1) {
      title.setTextColor(builder.titleColor);
    }
 else {
      title.setTextColor(DialogUtils.resolveColor(getContext(),android.R.attr.textColorPrimary));
    }
    if (builder.titleAlignment == Alignment.CENTER) {
      title.setGravity(Gravity.CENTER_HORIZONTAL);
    }
 else     if (builder.titleAlignment == Alignment.RIGHT) {
      title.setGravity(Gravity.RIGHT);
    }
  }
  invalidateList();
  invalidateActions();
  setOnShowListenerInternal();
  setViewInternal(view);
}
